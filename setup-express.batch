# Transfer some GAS from the Genesis wallet to our test accounts.
transfer 10000 gas genesis owen
transfer 10000 gas genesis steve
transfer 10000 gas genesis alice
transfer 10000 gas genesis bob

# Transfer some NEO from the Genesis wallet to our test accounts.
transfer 10000 neo genesis alice
transfer 10000 neo genesis bob

# Deploy the main NFT smart contract.
contract deploy ./token-contract/bin/sc/LunaToken.nef owen
# Deploy the demonstration smart contract.
contract deploy ./store-contract/bin/sc/DemoShopContract.nef steve
# Create a checkpoint that has the GAS and NEO transfers and the 
#  deployed smart contracts, but nothing else.
checkpoint create ./checkpoints/contracts-deployed -f

# Mint some NFTs.
contract invoke ./invoke-files/mint-hongfei.neo-invoke.json owen
contract invoke ./invoke-files/mint-erik.neo-invoke.json owen
contract invoke ./invoke-files/mint-john.neo-invoke.json owen
# Create a checkpoint that has the minted NFTs along with the 
#  state and contents from the previous checkpoint.
checkpoint create ./checkpoints/tokens-minted -f

# Examine the token just minted for Da Hongfei.  In the current
#  code base, we have to transfer the token first to an owner 
#  before it can be listed.
contract invoke ./invoke-files/transfer-then-list-nft.neo-invoke.json alice
# Create a checkpoint that is after the transfer then list operation.
checkpoint create ./checkpoints/token-listed -f

# Test Alice buying the Da Hongfei NFT.
#   
# We need the Global scope or the CheckWitness() call in the Nep11Token
#  class the LunaToken contract inherits will fail when we call its 
#  Transfer() method to complete a token transfer/purchase from within 
#  our OnNEP17Payment() method.  We are using GAS for NFT payments.
#  Therefore, an NFT tranfer/purchase begins with a call to the 
#  Transfer() method in the GasToken contract.  Without the 
#  Global scope the GasToken contract will not have permission 
#  to execute a transfer within the LunaToken contract.
#
# WARNING: Only use Global scope when using a private instance 
#  of a blockchain!  The Global scope is dangerous in the context 
#  of the MainNet or any other production execution context.
#  Instead, and only when absolutely necessary, use NEO N3's
#  allowed contracts feature or other tightly restricted
#  custom permissions scope!
contract invoke ./invoke-files/buy-nft.neo-invoke.json alice --witness-scope Global

# Create a new checkpoint.
checkpoint create ./checkpoints/token-bought -f

# List the NFTs available for sale.  We have to transfer the 
#  token to the DemoShopContract contract before we can list 
#  it since that contract is the sales agent.
contract invoke ./invoke-files/transfer-then-list-nft.neo-invoke.json alice
# Create a new checkpoint.
checkpoint create ./checkpoints/token-listed -f

# Done.